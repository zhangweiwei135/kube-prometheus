kind: pipeline
type: kubernetes
name: demo-2048

# 跳过验证证书，根据实际情况要或不要，github不需要
clone:
  skip_verify: true

# 选择pipeline跑在demo命名空间里
metadata:
  namespace: demo

# node选择
node_selector:
  kubernetes.io/hostname: slave-14

# 挂载本地目录
volumes:
- name: cache
  host:
    path: /data/cache

# 第一阶段：构建代码
steps:
  - name: build code
    image: maven:3.6-jdk-8
    # 在容器里执行的shell命令列表  
    commands:
    - mvn clean install -DskipTests=true
    - cd target && jar -xf 2048.war
    - ls -l
    # 在容器里挂载目录
    volumes:
      - name: cache
        path: /root/.m2

# 第二阶段: 构建镜像&推送镜像
  - name: build image & push
    image: plugins/docker     # docker插件
    settings:
      # 镜像仓库组名称
      repo: 10.166.33.110/demo/demo-2048
      # 镜像仓库名称
      registry: 10.166.33.110
      # 在web界面中设置的密钥        
      username:
        from_secret: harbor_username    
      password:
        from_secret: harbor_password
      # 镜像tag定义
      tags:
        - ${DRONE_BRANCH}-${DRONE_COMMIT}-${DRONE_BUILD_NUMBER}
      # 启用非ssl加密
      insecure: true
      # 构建镜像的dockerfile文件
      dockerfile: ./Dockerfiles/Dockerfile

# 第三阶段: 服务滚动更新
  - name: k8s-deploy
    # Kubernetes插件
    image: danielgormly/drone-plugin-kube:0.2.0
    settings:
      build_tag: ${DRONE_BRANCH}-${DRONE_COMMIT}-${DRONE_BUILD_NUMBER}
      # yaml模板
      template: template/demo-2048.yaml
      # apiserver地址    
      server: https://10.166.33.111:6443
      # Kubernetes服务帐户令牌 'kubectl get secret -nkube-system|grep token'
      token:
        from_secret: k8s_token
      # K8s CA证书的Base-64编码的字符串
      ca:
        from_secret: k8s_ca    

# 第四阶段: 邮件通知
  - name: email
    # 邮件插件
    image: drillster/drone-email:latest
    settings:
      # 只发送给邮件收件人
      recipients_only: true
      # 邮件收件列表
      recipients: [weiqun_h@163.com]
      # 设置主题
      subject: "Drone build: [{{ build.status }}] {{ repo.name }} ({{ repo.branch }}) #{{ build.number }}"
      # 邮件服务器主机
      host: smtp.exmail.qq.com
      # 邮件服务器端口
      port: 465
      # 从该地址发送通知
      from: weiqun.he@tenxcloud.com
      # 用户名
      username:
        from_secret: email_user
      # 密码
      password:
        from_secret: email_password
    # 当流水线执行成功时失败是发送    
    when:
      status: [ success, failure ]
      
# 通过分支限制pipeline执行
trigger:
  branch:
  - drone


